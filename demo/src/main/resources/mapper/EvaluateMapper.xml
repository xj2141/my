<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.EvaluateDao">

    <resultMap id="result" type="com.example.demo.domain.Evaluate">
        <id property="evaluateId" column="evaluateId" />
        <result property="evaluateDate" column="evaluateDate"/>
        <result property="evaluateName" column="evaluateName"/>
        <result property="score" column="score"/>
        <result property="conclusion" column="conclusion"/>
    </resultMap>

    <select id="findByEvaluate" resultMap="result" parameterType="com.example.demo.domain.Evaluate">
        select * from evaluate
        where evaluateDate=#{evaluateDate} and evaluateName=#{evaluateName}
    </select>

    <select id="queryPage" resultMap="result">
        select * from evaluate
        where evaluateName like concat(concat('%',#{evaluateName}),'%')
        order by evaluateId asc
        limit #{startRows},2
    </select>

    <select id="getRowCount" resultType="Integer">
        select count(*) from evaluate
        where evaluateName like concat(concat('%',#{evaluateName}),'%')
    </select>

    <insert id="insert" parameterType="com.example.demo.domain.Evaluate">
        insert into evaluate(evaluateDate,evaluateName,score,conclusion)
        values(
        #{evaluateDate,jdbcType=VARCHAR},
        #{evaluateName,jdbcType=VARCHAR},
        #{score,jdbcType=VARCHAR},
        #{conclusion,jdbcType=VARCHAR}
        )
    </insert>

    <delete id="delete" parameterType="int">
        delete from evaluate
        where evaluateId=#{evaluateId}
    </delete>

    <delete id="remove">
        delete from evaluate where evaluateId in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="com.example.demo.domain.Evaluate">
        update evaluate
        set score=#{score},conclusion=#{conclusion}
        where evaluateDate=#{evaluateDate} and evaluateName=#{evaluateName}
    </update>

</mapper>